// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Zatychka.Server.Data;

#nullable disable

namespace Zatychka.Server.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250829001539_AddReserves_Tables")]
    partial class AddReserves_Tables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("PublicWallet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("FrozenUsdt")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("MainUsdt")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("PublicWallets");
                });

            modelBuilder.Entity("Zatychka.Server.Models.AppSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Json")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("UpdatedByUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AppSettings");
                });

            modelBuilder.Entity("Zatychka.Server.Models.BalanceChange", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BalanceAfter")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BalanceBefore")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("BalanceChanges");
                });

            modelBuilder.Entity("Zatychka.Server.Models.DepositCursor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long?>("LastBlockTimestamp")
                        .HasColumnType("bigint");

                    b.Property<string>("LastTxId")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("DepositCursors");
                });

            modelBuilder.Entity("Zatychka.Server.Models.Device", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("Zatychka.Server.Models.FrozenBalanceChange", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("FreezeDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UnfreezeDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("FrozenBalanceChanges");
                });

            modelBuilder.Entity("Zatychka.Server.Models.IntakeDateConfig", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("CustomDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Mode")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("IntakeDateConfigs");
                });

            modelBuilder.Entity("Zatychka.Server.Models.Link", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal?>("DailyAmountLimitUsdt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("DailyTxCountLimit")
                        .HasColumnType("int");

                    b.Property<int>("DeviceId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<decimal>("MaxAmountUsdt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("MaxConcurrentTransactions")
                        .HasColumnType("int");

                    b.Property<decimal>("MinAmountUsdt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("MinMinutesBetweenTransactions")
                        .HasColumnType("int");

                    b.Property<decimal?>("MonthlyAmountLimitUsdt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("MonthlyTxCountLimit")
                        .HasColumnType("int");

                    b.Property<int>("RequisiteId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalAmountLimitUsdt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("TotalTxCountLimit")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DeviceId");

                    b.HasIndex("RequisiteId");

                    b.HasIndex("UserId");

                    b.ToTable("Links");
                });

            modelBuilder.Entity("Zatychka.Server.Models.Owner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Owners");
                });

            modelBuilder.Entity("Zatychka.Server.Models.OwnerRequisite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("OwnerRequisites");
                });

            modelBuilder.Entity("Zatychka.Server.Models.PayinTransactionPrivate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("DealAmount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int?>("DeviceId")
                        .HasColumnType("int");

                    b.Property<decimal>("IncomeAmount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int?>("RequisiteId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DeviceId");

                    b.HasIndex("RequisiteId");

                    b.HasIndex("UserId");

                    b.ToTable("PayinTransactionsPrivate");
                });

            modelBuilder.Entity("Zatychka.Server.Models.PayinTransactionPublic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("DealAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("DeviceId")
                        .HasColumnType("int");

                    b.Property<decimal>("IncomeAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("LinkId")
                        .HasColumnType("int");

                    b.Property<int?>("RequisiteId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.HasKey("Id");

                    b.HasIndex("DeviceId");

                    b.HasIndex("LinkId");

                    b.HasIndex("RequisiteId");

                    b.ToTable("PayinTransactionsPublic");
                });

            modelBuilder.Entity("Zatychka.Server.Models.PrivateDispute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("DealAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("DeviceId")
                        .HasColumnType("int");

                    b.Property<string>("FilesJson")
                        .HasColumnType("longtext");

                    b.Property<int?>("PausedRemainingSeconds")
                        .HasColumnType("int");

                    b.Property<int?>("RequisiteId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TimerEndUtc")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("TransactionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DeviceId");

                    b.HasIndex("RequisiteId");

                    b.HasIndex("UserId");

                    b.ToTable("PrivateDisputes");
                });

            modelBuilder.Entity("Zatychka.Server.Models.PrivateReserve", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("PrivateReserves", (string)null);
                });

            modelBuilder.Entity("Zatychka.Server.Models.PrivateStatisticsUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("ActiveTxAmountUSDT")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("ActiveTxCount")
                        .HasColumnType("int");

                    b.Property<int>("DisputesActiveCount")
                        .HasColumnType("int");

                    b.Property<int>("DisputesTotalCount")
                        .HasColumnType("int");

                    b.Property<decimal>("ProfitUSDT")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("SuccessRateSuffix")
                        .HasMaxLength(8)
                        .HasColumnType("varchar(8)");

                    b.Property<int>("SuccessRateValue")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalTxAmountUSDT")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("TotalTxCount")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("PrivateStatisticsUsers");
                });

            modelBuilder.Entity("Zatychka.Server.Models.PrivateWalletUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("FrozenUsdt")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("InsuranceUsdt")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("MainUsdt")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("PrivateWalletUser");
                });

            modelBuilder.Entity("Zatychka.Server.Models.PublicDispute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("DealAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("DeviceId")
                        .HasColumnType("int");

                    b.Property<string>("FilesJson")
                        .HasColumnType("longtext");

                    b.Property<int?>("PausedRemainingSeconds")
                        .HasColumnType("int");

                    b.Property<int?>("RequisiteId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TimerEndUtc")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("TransactionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("DeviceId");

                    b.HasIndex("RequisiteId");

                    b.ToTable("PublicDisputes");
                });

            modelBuilder.Entity("Zatychka.Server.Models.PublicReserve", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("PublicReserves", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 0m,
                            UpdatedAt = new DateTimeOffset(new DateTime(2025, 8, 29, 0, 15, 39, 41, DateTimeKind.Unspecified).AddTicks(1845), new TimeSpan(0, 0, 0, 0, 0))
                        });
                });

            modelBuilder.Entity("Zatychka.Server.Models.PublicWalletUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("FrozenUsdt")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("InsuranceUsdt")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("MainUsdt")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.ToTable("PublicWalletUser");
                });

            modelBuilder.Entity("Zatychka.Server.Models.RefreshToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("RevokedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("RefreshTokens");
                });

            modelBuilder.Entity("Zatychka.Server.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Zatychka.Server.Models.UserTelegramLink", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Source")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<long?>("TelegramUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("TelegramLinks");
                });

            modelBuilder.Entity("Zatychka.Server.Models.UserWallet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("FrozenUsdt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MainUsdt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserWallets");
                });

            modelBuilder.Entity("Zatychka.Server.Models.BalanceChange", b =>
                {
                    b.HasOne("Zatychka.Server.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Zatychka.Server.Models.Device", b =>
                {
                    b.HasOne("Zatychka.Server.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Zatychka.Server.Models.FrozenBalanceChange", b =>
                {
                    b.HasOne("Zatychka.Server.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Zatychka.Server.Models.Link", b =>
                {
                    b.HasOne("Zatychka.Server.Models.Device", "Device")
                        .WithMany()
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Zatychka.Server.Models.OwnerRequisite", "Requisite")
                        .WithMany()
                        .HasForeignKey("RequisiteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Zatychka.Server.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Device");

                    b.Navigation("Requisite");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Zatychka.Server.Models.Owner", b =>
                {
                    b.HasOne("Zatychka.Server.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Zatychka.Server.Models.OwnerRequisite", b =>
                {
                    b.HasOne("Zatychka.Server.Models.Owner", "Owner")
                        .WithMany("Requisites")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("Zatychka.Server.Models.PayinTransactionPrivate", b =>
                {
                    b.HasOne("Zatychka.Server.Models.Device", "Device")
                        .WithMany()
                        .HasForeignKey("DeviceId");

                    b.HasOne("Zatychka.Server.Models.OwnerRequisite", "Requisite")
                        .WithMany()
                        .HasForeignKey("RequisiteId");

                    b.HasOne("Zatychka.Server.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Device");

                    b.Navigation("Requisite");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Zatychka.Server.Models.PayinTransactionPublic", b =>
                {
                    b.HasOne("Zatychka.Server.Models.Device", "Device")
                        .WithMany()
                        .HasForeignKey("DeviceId");

                    b.HasOne("Zatychka.Server.Models.Link", "Link")
                        .WithMany()
                        .HasForeignKey("LinkId");

                    b.HasOne("Zatychka.Server.Models.OwnerRequisite", "Requisite")
                        .WithMany()
                        .HasForeignKey("RequisiteId");

                    b.Navigation("Device");

                    b.Navigation("Link");

                    b.Navigation("Requisite");
                });

            modelBuilder.Entity("Zatychka.Server.Models.PrivateDispute", b =>
                {
                    b.HasOne("Zatychka.Server.Models.Device", "Device")
                        .WithMany()
                        .HasForeignKey("DeviceId");

                    b.HasOne("Zatychka.Server.Models.OwnerRequisite", "Requisite")
                        .WithMany()
                        .HasForeignKey("RequisiteId");

                    b.HasOne("Zatychka.Server.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Device");

                    b.Navigation("Requisite");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Zatychka.Server.Models.PrivateStatisticsUser", b =>
                {
                    b.HasOne("Zatychka.Server.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Zatychka.Server.Models.PrivateWalletUser", b =>
                {
                    b.HasOne("Zatychka.Server.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Zatychka.Server.Models.PublicDispute", b =>
                {
                    b.HasOne("Zatychka.Server.Models.Device", "Device")
                        .WithMany()
                        .HasForeignKey("DeviceId");

                    b.HasOne("Zatychka.Server.Models.OwnerRequisite", "Requisite")
                        .WithMany()
                        .HasForeignKey("RequisiteId");

                    b.Navigation("Device");

                    b.Navigation("Requisite");
                });

            modelBuilder.Entity("Zatychka.Server.Models.RefreshToken", b =>
                {
                    b.HasOne("Zatychka.Server.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Zatychka.Server.Models.UserTelegramLink", b =>
                {
                    b.HasOne("Zatychka.Server.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Zatychka.Server.Models.UserWallet", b =>
                {
                    b.HasOne("Zatychka.Server.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Zatychka.Server.Models.Owner", b =>
                {
                    b.Navigation("Requisites");
                });
#pragma warning restore 612, 618
        }
    }
}
